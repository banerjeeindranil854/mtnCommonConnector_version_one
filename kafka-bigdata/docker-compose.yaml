services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - bigdata_network
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1:compact, test-topic:1:1:compact"
    volumes:
      - kafka_Volume:/var/run/docker.sock
    networks:
      - bigdata_network
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083
    networks:
      - bigdata_network
  kafka-consumer:
    image: mtnkafkaconsumer:latest
    ports:
      - "8096:8096"
    container_name: kafka-consumer
    restart: always
    networks:
      - bigdata_network
    depends_on:
      - kafka

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    networks:
      - bigdata_network



  datanode:
      image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
      container_name: datanode
      restart: always
      volumes:
        - hadoop_datanode:/hadoop/dfs/data
      environment:
        SERVICE_PRECONDITION: "namenode:9870"
      env_file:
        - ./hadoop.env
      networks:
        - bigdata_network
      depends_on:
        - namenode

  resourcemanager:
      image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
      container_name: resourcemanager
      restart: always
      environment:
        SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
      env_file:
        - ./hadoop.env
      networks:
        - bigdata_network
      depends_on:
        - namenode
        - datanode

  nodemanager:
      image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
      container_name: nodemanager
      restart: always
      environment:
        SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
      env_file:
        - ./hadoop.env
      networks:
        - bigdata_network
      depends_on:
        - namenode
        - datanode
        - resourcemanager

  historyserver:
      image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
      container_name: historyserver
      restart: always
      environment:
        SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
      volumes:
        - hadoop_historyserver:/hadoop/yarn/timeline
      env_file:
        - ./hadoop.env
      networks:
        - bigdata_network
      depends_on:
        - namenode
        - datanode
        - resourcemanager
        - nodemanager
  spark-master:
      image: bde2020/spark-master:2.4.0-hadoop2.7
      container_name: spark-master
      ports:
        - "9090:8080"
        - "7077:7077"
      environment:
        SPARK_MODE: master
        SPARK_MASTER_HOST: spark-master
      networks:
        - bigdata_network

  spark-worker:
      image: bde2020/spark-worker:2.4.0-hadoop2.7
      container_name: spark-worker
      ports:
        - "9091:8080"
        - "7000:7000"
      environment:
        SPARK_MODE: worker
        SPARK_MASTER: spark://spark-master:7077
      networks:
        - bigdata_network
      depends_on:
        - spark-master
  firefox:
    image: jlesage/firefox
    hostname: firefox
    ports:
      - 5800:5800
    networks:
      - bigdata_network

networks:
  bigdata_network:
    driver: bridge
    external: false
volumes:
  kafka_Volume:
  hadoop_datanode:
    external: false
  hadoop_namenode:
    external: false
  hadoop_historyserver:
    external: false
